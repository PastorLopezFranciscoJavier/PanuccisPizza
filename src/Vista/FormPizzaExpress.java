/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.awt.Color;
import java.util.LinkedList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import panuccis.pizza.Cliente;
import panuccis.pizza.Pedido;
import panuccis.pizza.Pizza;
import panuccis.pizza.Tamanio;
import panuccis.pizza.TipoPizza;
import panuccis.pizza.Toppings;

/**
 *
 * @author prog
 */
public class FormPizzaExpress extends javax.swing.JFrame {

    private String NOMBRE = "Nombre";
    private String DIRECCION = "Dirección";
    private String EMAIL = "Email";

    private Pizza pizza;
    private boolean[] toppings;
    private Cliente cliente;
    private Pedido pedido;
    private Double precioTotal;

    /**
     * Creates new form PizzaExpress
     */
    public FormPizzaExpress() {
        precioTotal = (double) 0.0;
        //Creamos pizza estandar
        crearNuevaPizza();
        initComponents();
        rellenaTipoPizza();
        // seleccionamos tamaño pequeño por defecto
        radioPeque.setSelected(true);
        //Centrar en pantalla
        setLocationRelativeTo(null);
        actualizarPrecio();
        txtPrecioTotal.setText(precioTotal + "€");
    }
    
    private void crearNuevaPizza(){
        toppings = new boolean[Toppings.values().length];
        pizza = new Pizza(TipoPizza.BBQ, Tamanio.PEQUEYA, toppings);
    }

    /**
     * Rellena las opciones del combobox comboTipoPizza con la clase enumerador
     * TipoPizza. Con esto conseguimos que sea muy sencillo añadir un tipo más,
     * sin apenas modificar el código.
     */
    private void rellenaTipoPizza() {
        for (TipoPizza tipo : TipoPizza.values()) {
            comboTipoPizza.addItem(tipo.toString());
        }
    }

    private void actualizarPrecio() {
        Double precio = 0.0;

        if (radioPeque.isSelected()) {
            pizza.setTamanyo(Tamanio.PEQUEYA);
            precio += Tamanio.PEQUEYA.getPrecio();
        }
        if (radioMediana.isSelected()) {
            pizza.setTamanyo(Tamanio.MEDIANA);
            precio += Tamanio.MEDIANA.getPrecio();
        }
        if (radioFamiliar.isSelected()) {
            pizza.setTamanyo(Tamanio.FAMILIAR);
            precio += Tamanio.FAMILIAR.getPrecio();
        }
        toppings[Toppings.CEBOLLA.ordinal()] = checkCebolla.isSelected();
        toppings[Toppings.QUESO.ordinal()] = checkQueso.isSelected();
        toppings[Toppings.PINIA.ordinal()] = checkPina.isSelected();

        for (boolean tieneExtra : toppings) {
            if (tieneExtra) {
                precio += 1.0;
            }
        }

        pizza.setPrecio(precio);
        txtPrecioPizza.setText(precio + "€");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoTamanio = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtDireccion = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        txtEmail = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        bGuardarCliente = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        comboTipoPizza = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        radioPeque = new javax.swing.JRadioButton();
        radioMediana = new javax.swing.JRadioButton();
        radioFamiliar = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        checkCebolla = new javax.swing.JCheckBox();
        checkQueso = new javax.swing.JCheckBox();
        checkPina = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        txtPrecioPizza = new javax.swing.JTextField();
        butEnviarPedido = new javax.swing.JButton();
        txtPrecioTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        butAddPizza = new javax.swing.JButton();
        butDelPedido = new javax.swing.JButton();
        butDelPizza = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listadoPedido = new javax.swing.JList<>();

        grupoTamanio.add(radioPeque);
        grupoTamanio.add(radioMediana);
        grupoTamanio.add(radioFamiliar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 800, 600));
        setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 100));
        jPanel2.setSize(new java.awt.Dimension(800, 100));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/panuccis_pizza--i_14138560015814138520.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/100px-Futurama_Planet_Express.svg copia.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Helvetica", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BIENVENIDO A LA PIZZERIA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 250));

        txtNombre.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(204, 204, 204));
        txtNombre.setText("Nombre");
        txtNombre.setToolTipText("Nombre");
        txtNombre.setBorder(null);
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        txtDireccion.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        txtDireccion.setForeground(new java.awt.Color(204, 204, 204));
        txtDireccion.setText("Dirección");
        txtDireccion.setToolTipText("Dirección");
        txtDireccion.setBorder(null);
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(204, 204, 204));
        txtEmail.setText("Email");
        txtEmail.setToolTipText("email@gmail.com");
        txtEmail.setBorder(null);
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        bGuardarCliente.setBackground(new java.awt.Color(204, 204, 204));
        bGuardarCliente.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        bGuardarCliente.setMnemonic('G');
        bGuardarCliente.setText("Guardar Cliente");
        bGuardarCliente.setToolTipText("Guarda el cliente");
        bGuardarCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bGuardarCliente.setBorderPainted(false);
        bGuardarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDireccion)
                    .addComponent(txtEmail)
                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bGuardarCliente)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bGuardarCliente))
                .addGap(19, 19, 19)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(400, 250));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        jLabel4.setText("Elige el pizza");
        jPanel6.add(jLabel4, new java.awt.GridBagConstraints());

        comboTipoPizza.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        comboTipoPizza.setToolTipText("");
        comboTipoPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoPizzaActionPerformed(evt);
            }
        });
        jPanel6.add(comboTipoPizza, new java.awt.GridBagConstraints());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(400, 250));

        radioPeque.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        radioPeque.setText("Pequeña - 5€");
        radioPeque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPequeActionPerformed(evt);
            }
        });

        radioMediana.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        radioMediana.setText("Mediana - 7,5€");
        radioMediana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMedianaActionPerformed(evt);
            }
        });

        radioFamiliar.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        radioFamiliar.setText("Familiar - 10€");
        radioFamiliar.setToolTipText("");
        radioFamiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFamiliarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel5.setText("Tamaño");

        jLabel6.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jLabel6.setText("Toppings - 1€");

        checkCebolla.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        checkCebolla.setText("Extra de cebolla");
        checkCebolla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCebollaActionPerformed(evt);
            }
        });

        checkQueso.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        checkQueso.setText("Extra de queso");
        checkQueso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkQuesoActionPerformed(evt);
            }
        });

        checkPina.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        checkPina.setText("Piña");
        checkPina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPinaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        jLabel8.setText("TOTAL");

        txtPrecioPizza.setFont(new java.awt.Font("Helvetica", 0, 48)); // NOI18N
        txtPrecioPizza.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrecioPizza.setBorder(null);
        txtPrecioPizza.setEnabled(false);
        txtPrecioPizza.setFocusTraversalKeysEnabled(false);

        butEnviarPedido.setMnemonic('E');
        butEnviarPedido.setText("Enviar Pedido");
        butEnviarPedido.setActionCommand("");
        butEnviarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butEnviarPedidoActionPerformed(evt);
            }
        });

        txtPrecioTotal.setFont(new java.awt.Font("Helvetica", 0, 48)); // NOI18N
        txtPrecioTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrecioTotal.setBorder(null);
        txtPrecioTotal.setEnabled(false);
        txtPrecioTotal.setFocusTraversalKeysEnabled(false);

        jLabel9.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        jLabel9.setText("Pizza");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioFamiliar)
                    .addComponent(radioMediana)
                    .addComponent(radioPeque)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkCebolla)
                    .addComponent(jLabel6)
                    .addComponent(checkQueso)
                    .addComponent(checkPina))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butEnviarPedido)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPrecioTotal)
                        .addComponent(txtPrecioPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioPeque)
                    .addComponent(checkCebolla))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioMediana)
                    .addComponent(checkQueso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioFamiliar)
                    .addComponent(checkPina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecioPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(butEnviarPedido)
                .addGap(27, 27, 27))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(400, 250));

        jLabel7.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("SU PEDIDO");
        jLabel7.setToolTipText("");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        butAddPizza.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        butAddPizza.setMnemonic('A');
        butAddPizza.setText("Añadir Pizza");
        butAddPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddPizzaActionPerformed(evt);
            }
        });

        butDelPedido.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        butDelPedido.setMnemonic('P');
        butDelPedido.setText("Borrar Pedido");
        butDelPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDelPedidoActionPerformed(evt);
            }
        });

        butDelPizza.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        butDelPizza.setMnemonic('B');
        butDelPizza.setText("Borrar Pizza");
        butDelPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDelPizzaActionPerformed(evt);
            }
        });

        listadoPedido.setFont(new java.awt.Font("Helvetica", 0, 14)); // NOI18N
        listadoPedido.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listadoPedido);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(butAddPizza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(butDelPizza)
                        .addGap(98, 98, 98)
                        .addComponent(butDelPedido))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butDelPizza)
                    .addComponent(butAddPizza)
                    .addComponent(butDelPedido))
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        // TODO add your handling code here:
        if (NOMBRE.equals(txtNombre.getText())) {
            txtNombre.setText("");
        }
        txtNombre.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (DIRECCION.equals(txtDireccion.getText())) {
            txtDireccion.setText("");
        }
        txtDireccion.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        if (EMAIL.equals(txtEmail.getText())) {
            txtEmail.setText("");
        }
        txtEmail.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtEmailKeyPressed

    private void bGuardarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarClienteActionPerformed
        // Comprobamos que el campo no tenga el valor por defecto y que no esta
        // vacio el campo -- resaltando en rojo el valor erroneo y activando el
        // foco en el control
        String nombre = txtNombre.getText();
        if (nombre.isEmpty() || nombre.equals(NOMBRE)) {
            txtNombre.setText(NOMBRE);
            txtNombre.setForeground(Color.red);
            txtNombre.requestFocus();
            return;
        }
        String direccion = txtDireccion.getText();
        if (direccion.isEmpty() || direccion.equals(DIRECCION)) {
            txtDireccion.setText(DIRECCION);
            txtDireccion.setForeground(Color.red);
            txtDireccion.requestFocus();
            return;
        }
        String email = txtEmail.getText();
        if (email.isEmpty() || email.equals(EMAIL)
                || !validarEmail(email)) {
            txtEmail.setForeground(Color.red);
            txtEmail.requestFocus();
            return;
        }
        // Si el cliente ya está creado, no dejamos crear otro
        if(cliente != null){
            JOptionPane.showMessageDialog(
                    null,
                    "Ya tiene un cliente. Termine el pedido, para iniciar otro cliente\n" + cliente,
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);   
            return;
        }

        //Si no hay ningún error creamos el cliente y el pedido
        cliente = new Cliente(txtNombre.getText(), txtDireccion.getText(),
                txtEmail.getText());
        pedido = new Pedido(cliente);

    }//GEN-LAST:event_bGuardarClienteActionPerformed

    private void comboTipoPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoPizzaActionPerformed

        String itemSeleccionado = (String) comboTipoPizza.getSelectedItem();

        // si no existe cliente, pizza no existe todavia
        // por eso no hacemos nada y devolvemos el control
        if (pizza == null) {
            return;
        }
        // Comparamos todos los tipos existentes con el item seleccionado.
        // Aplicando el tipo correcto
        for (TipoPizza tipo : TipoPizza.values()) {
            if (tipo.toString().equals(itemSeleccionado)) {
                pizza.setTipo(tipo);
            }
        }
    }//GEN-LAST:event_comboTipoPizzaActionPerformed

    private void radioPequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPequeActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_radioPequeActionPerformed

    private void radioMedianaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMedianaActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_radioMedianaActionPerformed

    private void radioFamiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFamiliarActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_radioFamiliarActionPerformed

    private void checkCebollaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCebollaActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_checkCebollaActionPerformed

    private void checkQuesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkQuesoActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_checkQuesoActionPerformed

    private void checkPinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPinaActionPerformed
        actualizarPrecio();
    }//GEN-LAST:event_checkPinaActionPerformed

    private void butAddPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddPizzaActionPerformed
        if (pedido == null) {
            JOptionPane.showMessageDialog(
                    null,
                    "No existe el cliente",
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);
            bGuardarCliente.requestFocus();
            return;
        }
        pedido.añadirPizza(pizza);
        crearNuevaPizza();
        actualizarPrecio();
        actualizarListaPedido();
    }//GEN-LAST:event_butAddPizzaActionPerformed

    private void butDelPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDelPizzaActionPerformed
        borrarPizza();
        actualizarPrecio();
        actualizarListaPedido();
    }//GEN-LAST:event_butDelPizzaActionPerformed

    private void butDelPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDelPedidoActionPerformed
        borrarTodasLasPizzas();
        actualizarPrecio();
        actualizarListaPedido();
    }//GEN-LAST:event_butDelPedidoActionPerformed

    private void butEnviarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butEnviarPedidoActionPerformed
        try {
            if(precioTotal == 0.0){
                JOptionPane.showMessageDialog(
                    null,
                    "No ha seleccionado ninguna pizza\n" + 
                    "Debe añadir una pizza",
                    "Informe Pedido",
                    JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(
                    null,
                    pedido.toString(),
                    "Resumen Pedido",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (NullPointerException e){
            JOptionPane.showMessageDialog(
                    null,
                    "No existen pedido.",
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);   
        } catch (Exception e){
            JOptionPane.showMessageDialog(
                    null,
                    e,
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);   
        }
        
        System.exit(0);
    }//GEN-LAST:event_butEnviarPedidoActionPerformed

    /**
     * Elimina todas las pizzas del pedido
     */
    private void borrarTodasLasPizzas(){
        try {
            pedido.eliminarTodas();
        } catch (NullPointerException e){
            JOptionPane.showMessageDialog(
                    null,
                    "No existen pizzas por eliminar.",
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);   
        } catch (Exception e){
            JOptionPane.showMessageDialog(
                    null,
                    e,
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);   
        }
    }
    /**
     * Borra la pizzas seleccionada
     */
    private void borrarPizza() {
        
        try {
            pedido.eliminarPizza(listadoPedido.getLeadSelectionIndex());
        } catch (IndexOutOfBoundsException e){
             JOptionPane.showMessageDialog(
                    null,
                    "Por favor elija la pizza a eliminar",
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);           
        } catch (NullPointerException e){
            JOptionPane.showMessageDialog(
                    null,
                    "Por favor ha de tener una pizza seleccionada para poder eliminarla",
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);
        }catch (Exception e) {
            JOptionPane.showMessageDialog(
                    null,
                    e,
                    "Error detectado",
                    JOptionPane.WARNING_MESSAGE);
        }
        butDelPizza.requestFocus();
    }

    /**
     * Valida si el email pasado es o no valido. Según el formato estandar
     *
     * @param email
     * @return true si es valido, false si no
     */
    private static boolean validarEmail(String email) {

        String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}"
                + "~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";

        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);

        return matcher.matches();
    }

    /**
     * Actualiza el pedido del cliente.
     */
    private void actualizarListaPedido() {
        LinkedList<Pizza> listado = pedido.getPizzas();
        DefaultListModel<String> model = new DefaultListModel<>();
        precioTotal = (double) 0.0;
        for (Pizza piz : listado) {
            model.addElement(piz.toString());
            precioTotal += piz.getPrecio();
        }
        listadoPedido.setModel(model);
        txtPrecioTotal.setText(precioTotal + "€");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPizzaExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPizzaExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPizzaExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPizzaExpress.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPizzaExpress().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bGuardarCliente;
    private javax.swing.JButton butAddPizza;
    private javax.swing.JButton butDelPedido;
    private javax.swing.JButton butDelPizza;
    private javax.swing.JButton butEnviarPedido;
    private javax.swing.JCheckBox checkCebolla;
    private javax.swing.JCheckBox checkPina;
    private javax.swing.JCheckBox checkQueso;
    private javax.swing.JComboBox<String> comboTipoPizza;
    private javax.swing.ButtonGroup grupoTamanio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JList<String> listadoPedido;
    private javax.swing.JRadioButton radioFamiliar;
    private javax.swing.JRadioButton radioMediana;
    private javax.swing.JRadioButton radioPeque;
    public javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioPizza;
    private javax.swing.JTextField txtPrecioTotal;
    // End of variables declaration//GEN-END:variables

    
}
